<UserControl x:Class="UIWPFClean.FormAround"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:UIWPFClean"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:si="http://schemas.microsoft.com/expression/2010/interactions"
             mc:Ignorable="d" 
             TextElement.Foreground="{DynamicResource MaterialDesignBody}"
             FontFamily="{DynamicResource MaterialDesignFont}"
             d:DesignHeight="900" d:DesignWidth="1600">

    <materialDesign:DrawerHost
              HorizontalAlignment="Stretch"
              VerticalAlignment="Stretch"
        Style="{DynamicResource KeyboardDrawerHost}"
            >
        <!--BorderBrush="{DynamicResource MaterialDesignDivider}"-->

        <materialDesign:DrawerHost.TopDrawerContent>
            <local:myKeyboard/>
        </materialDesign:DrawerHost.TopDrawerContent>

        <materialDesign:DrawerHost.BottomDrawerContent>
            <local:myKeyboard/>
        </materialDesign:DrawerHost.BottomDrawerContent>

        <Grid x:Name="MainGrid" ManipulationBoundaryFeedback="MainGrid_ManipulationBoundaryFeedback">
            <Grid.RowDefinitions>
                <RowDefinition Height="10*" MinHeight="70"/>
                <RowDefinition Height="100*"/>
                <RowDefinition Height="0"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="6*" MinWidth="80"/>
                <ColumnDefinition Width="100*"/>
                <ColumnDefinition Width="0"/>
            </Grid.ColumnDefinitions>

            <Grid x:Name="HeaderGrid" Grid.Row="0" Grid.Column="1">

                <Label Name="currentLabel" 
                   HorizontalContentAlignment="Center"    
                   Foreground="{DynamicResource MaterialDesignBody}"
                   >
                    <Label.Content>
                        <TextBlock Text="{Binding LabelCurrent}" Margin="7" FontWeight="DemiBold"/>
                    </Label.Content>
                </Label>

            </Grid>

            <Grid x:Name="ButtonsLeftGrid" Grid.Row="0" Grid.Column="0" Grid.RowSpan="3">
                <Grid.RowDefinitions>
                    <RowDefinition Height="25*"/>
                    <RowDefinition Height="75*"/>
                </Grid.RowDefinitions>

                <Button Grid.Row="0" 
                    Name="HomeButton" 
                    Height="Auto"
                    Command="{Binding HomePageCommand}"
                    Style="{StaticResource MaterialDesignRaisedButton}"
                    materialDesign:ShadowAssist.ShadowDepth="Depth3"
                    Margin="2 2 0 2"
                    >
                    <materialDesign:PackIcon
                    Kind="Home"
                    Height="48"
                    Width="48" 
                    />
                </Button>

                <Button Grid.Row="1" 
                    Name="BackButton" 
                    IsEnabled="{Binding IsBackButtonActive}"
                    Height="Auto"
                    Style="{StaticResource MaterialDesignRaisedButton}"
                    materialDesign:ShadowAssist.ShadowDepth="Depth3"
                    Margin="2 2 0 2"
                    >
                    <materialDesign:PackIcon
                    Kind="ArrowBack"
                    Height="48"
                    Width="48"
                    />
                </Button>
            </Grid>

            <ScrollViewer Name="scroller"
                      Grid.Row="1" 
                      Grid.Column="1" 
                      VerticalScrollBarVisibility="Auto"
                      VerticalContentAlignment="Top"
                      PanningMode="VerticalOnly"
                      CanContentScroll="True"
                      >
                <StackPanel VerticalAlignment="Center" Name="stackPanel1">
                    <Button Content="Add Textbox with Keyboard" Click="Button_Click"/>
                    <TextBox>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="GotFocus">
                                <i:InvokeCommandAction Command="{x:Static materialDesign:DrawerHost.OpenDrawerCommand}"
                                                           CommandParameter="{x:Static Dock.Bottom}"/>
                            </i:EventTrigger>
                            <i:EventTrigger EventName="LostFocus">
                                <i:InvokeCommandAction Command="{x:Static materialDesign:DrawerHost.CloseDrawerCommand}"
                                                           CommandParameter="{x:Static Dock.Bottom}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                    <TextBox>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="GotFocus">
                                <i:InvokeCommandAction Command="{x:Static materialDesign:DrawerHost.OpenDrawerCommand}"
                                                           CommandParameter="{x:Static Dock.Bottom}"/>
                            </i:EventTrigger>
                            <i:EventTrigger EventName="LostFocus">
                                <i:InvokeCommandAction Command="{x:Static materialDesign:DrawerHost.CloseDrawerCommand}"
                                                           CommandParameter="{x:Static Dock.Bottom}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                    <TextBox>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="GotFocus">
                                <i:InvokeCommandAction Command="{x:Static materialDesign:DrawerHost.OpenDrawerCommand}"
                                                           CommandParameter="{x:Static Dock.Bottom}"/>
                            </i:EventTrigger>
                            <i:EventTrigger EventName="LostFocus">
                                <i:InvokeCommandAction Command="{x:Static materialDesign:DrawerHost.CloseDrawerCommand}"
                                                           CommandParameter="{x:Static Dock.Bottom}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>

                </StackPanel>

            </ScrollViewer>
        </Grid>

    </materialDesign:DrawerHost>

</UserControl>
