<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:kbrd="clr-namespace:Rife.Keyboard;assembly=Rife.Keyboard"
                    >
    <sys:Double x:Key="globalFontSize">48</sys:Double>
    <sys:Double x:Key="keyboardFontSize">38</sys:Double>
    <materialDesign:DrawerOffsetConverter x:Key="DrawerOffsetConverter" />

    <Style x:Key="CardButton"
           TargetType="Button" 
           BasedOn="{StaticResource MaterialDesignRaisedButton}"
           >
        <Setter Property="materialDesign:ShadowAssist.ShadowDepth" Value="Depth2" />
        <Setter Property="materialDesign:ShadowAssist.ShadowEdges" Value="None" />
        <Setter Property="materialDesign:ShadowAssist.ShadowEdges" Value="Bottom,Left" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="Background" Value="{DynamicResource MaterialDesignCardBackground}" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="FontSize" Value="{StaticResource globalFontSize}" />
        <Setter Property="materialDesign:ButtonAssist.CornerRadius" Value="10 10 10 10" />
        <Setter Property="materialDesign:RippleAssist.Feedback" Value="{DynamicResource MaterialDesignFlatButtonRipple}"/>
    </Style>

    <Style x:Key="{x:Type Button}" 
               TargetType="Button" 
               BasedOn="{StaticResource MaterialDesignRaisedButton}"           
               >
        <Setter Property="materialDesign:ShadowAssist.ShadowDepth" Value="Depth3" />
        <Setter Property="materialDesign:ShadowAssist.ShadowEdges" Value="Bottom,Left" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="FontSize" Value="{StaticResource globalFontSize}" />
        <Setter Property="materialDesign:ButtonAssist.CornerRadius" Value="20 20 20 20" />
    </Style>

    <Style x:Key="KeyButton"
           TargetType="Button" 
           BasedOn="{StaticResource MaterialDesignRaisedButton}"
           >
        <Setter Property="Focusable" Value="False" />
        <Setter Property="materialDesign:ShadowAssist.ShadowDepth" Value="Depth3" />
        <Setter Property="materialDesign:ShadowAssist.ShadowEdges" Value="Left, Bottom" />
        <Setter Property="Margin" Value="3" />
        <!--<Setter Property="Height" Value="78" />-->
        <Setter Property="Height" Value="auto" />
        <Setter Property="Foreground" Value="{StaticResource MaterialDesignCardBackground}" />
        <Setter Property="FontSize" Value="{StaticResource keyboardFontSize}" />
        <Setter Property="materialDesign:ButtonAssist.CornerRadius" Value="12 12 12 12" />
    </Style>

    <Style TargetType="{x:Type kbrd:UnicodeKeyboardKey}" BasedOn="{StaticResource KeyButton}"/>
    <Style TargetType="{x:Type kbrd:VirtualKeyKeyboardKey}" BasedOn="{StaticResource KeyButton}"/>
    <Style TargetType="{x:Type kbrd:CapsKeyboardKey}" BasedOn="{StaticResource KeyButton}" />
    <Style TargetType="{x:Type kbrd:ShiftKeyboardKey}" BasedOn="{StaticResource KeyButton}" />

    <Style x:Key="{x:Type ScrollBar}" 
               TargetType="ScrollBar" 
               BasedOn="{StaticResource MaterialDesignScrollBar}"           
               >
        <Setter Property="materialDesign:ScrollBarAssist.ThumbCornerRadius" Value="15" />
        <Setter Property="materialDesign:ScrollBarAssist.ButtonsVisibility" Value="Collapsed" />
    </Style>

    <Style x:Key="{x:Type TextBox}" 
               TargetType="TextBox" 
               BasedOn="{StaticResource MaterialDesignFilledTextFieldTextBox}"
               >
        <Setter Property="AcceptsReturn" Value="true" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Margin" Value="20" />
        <Setter Property="FontSize" Value="{StaticResource globalFontSize}" />
        <Setter Property="materialDesign:HintAssist.FloatingScale" Value="0.5" />
        <Setter Property="materialDesign:ValidationAssist.FontSize" Value="24" />
        <Setter Property="materialDesign:TextFieldAssist.TextFieldCornerRadius" Value="20 20 0 0" />
        <Setter Property="materialDesign:TextFieldAssist.TextBoxViewMargin" Value="0 6 0 0" />
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="materialDesign:TextFieldAssist.HasOutlinedTextField" Value="True"/>
                <Setter Property="materialDesign:TextFieldAssist.DecorationVisibility" Value="Visible"/>
                <!--<Setter Property="BorderThickness" Value="5"/>
                <Setter Property="BorderBrush" Value="Red"/>-->
            </Trigger>
            <Trigger Property="Validation.HasError" Value="false">
                <Setter Property="materialDesign:TextFieldAssist.HasOutlinedTextField" Value="False"/>
                <Setter Property="materialDesign:TextFieldAssist.DecorationVisibility" Value="Hidden"/>
                <!--<Setter Property="BorderThickness" Value="0"/>
                <Setter Property="BorderBrush" Value="{x:Null}"/>-->
            </Trigger>
        </Style.Triggers>
    </Style>    
    <!--<Setter Property="BorderThickness" Value="5"/>
    <Setter Property="BorderBrush" Value="Red"/>
    <Setter Property="materialDesign:TextFieldAssist.UnderlineBrush" Value="Blue"/>
    <Setter Property="materialDesign:TextFieldAssist.DecorationVisibility" Value="Visible"/>-->
    
    <Style x:Key="{x:Type TextBlock}" 
               TargetType="TextBlock" 
               BasedOn="{StaticResource MaterialDesignCaptionTextBlock}"
               >
        <Setter Property="FontSize" Value="{StaticResource globalFontSize}" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>

    <Style x:Key="{x:Type Label}" 
               TargetType="Label" 
               BasedOn="{StaticResource MaterialDesignLabel}"
               >
        <Setter Property="FontSize" Value="{StaticResource globalFontSize}" />
    </Style>

    <Style TargetType="{x:Type materialDesign:DrawerHost}">
        <Setter Property="materialDesign:ShadowAssist.ShadowDepth" Value="Depth3" />
        <Setter Property="ClipToBounds" Value="True" />
        <Setter Property="LeftDrawerBackground" Value="{DynamicResource MaterialDesignPaper}" />
        <Setter Property="TopDrawerBackground" Value="{DynamicResource MaterialDesignPaper}" />
        <Setter Property="RightDrawerBackground" Value="{DynamicResource MaterialDesignPaper}" />
        <Setter Property="BottomDrawerBackground" Value="{DynamicResource MaterialDesignPaper}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type materialDesign:DrawerHost}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="AllDrawers">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="AllClosed" To="AnyOpen">
                                        <!--<Storyboard>
                                            <BooleanAnimationUsingKeyFrames Storyboard.TargetName="PART_ContentCover" Storyboard.TargetProperty="IsHitTestVisible">
                                                <DiscreteBooleanKeyFrame Value="True" KeyTime="0" />
                                            </BooleanAnimationUsingKeyFrames>
                                            <BooleanAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="IsEnabled">
                                                <DiscreteBooleanKeyFrame Value="False" KeyTime="0" />
                                            </BooleanAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_ContentCover" Storyboard.TargetProperty="Opacity">
                                                <EasingDoubleKeyFrame Value="0" KeyTime="0" />
                                                <EasingDoubleKeyFrame Value=".56" KeyTime="0:0:0.3">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <SineEase EasingMode="EaseOut" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ContentCover" 
                                                                           Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame Value="{StaticResource BlackBackground}" KeyTime="0" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>-->
                                    </VisualTransition>
                                    <VisualTransition From="AnyOpen" To="AllClosed">
                                        <!--<Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_ContentCover" Storyboard.TargetProperty="Opacity">
                                                <EasingDoubleKeyFrame Value="0.56" KeyTime="0" />
                                                <EasingDoubleKeyFrame Value="0" KeyTime="0:0:0.3">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <SineEase EasingMode="EaseInOut" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ContentCover" 
                                                                           Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame Value="{x:Null}" KeyTime="0:0:0.3" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>-->
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="AnyOpen">
                                    <!--<Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_ContentCover" Storyboard.TargetProperty="Opacity"
                                                             To=".56" Duration="0" />
                                        <BooleanAnimationUsingKeyFrames Storyboard.TargetName="PART_ContentCover" Storyboard.TargetProperty="IsHitTestVisible">
                                            <DiscreteBooleanKeyFrame Value="True" KeyTime="0" />
                                        </BooleanAnimationUsingKeyFrames>
                                        <BooleanAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="IsEnabled">
                                            <DiscreteBooleanKeyFrame Value="False" KeyTime="0" />
                                        </BooleanAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ContentCover" 
                                                                           Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame Value="{StaticResource BlackBackground}" KeyTime="0" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>-->
                                </VisualState>
                                <VisualState x:Name="AllClosed">
                                    <!--<Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_ContentCover" Storyboard.TargetProperty="Opacity"
                                                         To="0" />
                                        <BooleanAnimationUsingKeyFrames Storyboard.TargetName="PART_ContentCover" Storyboard.TargetProperty="IsHitTestVisible">
                                            <DiscreteBooleanKeyFrame Value="False" />
                                        </BooleanAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ContentCover" 
                                                                       Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame Value="{x:Null}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>-->
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="LeftDrawer">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="LeftDrawerClosed" To="LeftDrawerOpen">
                                        <Storyboard>
                                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="PART_LeftDrawer">
                                                <EasingThicknessKeyFrame Value="0" KeyTime="0:0:0.4">
                                                    <EasingThicknessKeyFrame.EasingFunction>
                                                        <SineEase EasingMode="EaseOut" />
                                                    </EasingThicknessKeyFrame.EasingFunction>
                                                </EasingThicknessKeyFrame>
                                            </ThicknessAnimationUsingKeyFrames>
                                            <DoubleAnimation Storyboard.TargetName="LeftDrawerShadow" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.04" />
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="LeftDrawerOpen" To="LeftDrawerClosed">
                                        <Storyboard>
                                            <ThicknessAnimation Storyboard.TargetProperty="Margin" Storyboard.TargetName="PART_LeftDrawer" Duration="0:0:0.4">
                                                <ThicknessAnimation.EasingFunction>
                                                    <SineEase EasingMode="EaseOut" />
                                                </ThicknessAnimation.EasingFunction>
                                            </ThicknessAnimation>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LeftDrawerShadow" Storyboard.TargetProperty="Opacity">
                                                <EasingDoubleKeyFrame Value="1" KeyTime="0:0:0.36" />
                                                <EasingDoubleKeyFrame Value="0" KeyTime="0:0:0.4">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <SineEase EasingMode="EaseOut" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="LeftDrawerOpen">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="LeftDrawerShadow" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0" />
                                        <ThicknessAnimation Storyboard.TargetProperty="Margin" Storyboard.TargetName="PART_LeftDrawer" To="0" Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="LeftDrawerClosed">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="LeftDrawerShadow" Storyboard.TargetProperty="Opacity" From="0" To="0" Duration="0" />
                                        <ThicknessAnimation Storyboard.TargetProperty="Margin" Storyboard.TargetName="PART_LeftDrawer" Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="RightDrawer">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="RightDrawerClosed" To="RightDrawerOpen">
                                        <Storyboard>
                                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="PART_RightDrawer">
                                                <EasingThicknessKeyFrame Value="0" KeyTime="0:0:0.4">
                                                    <EasingThicknessKeyFrame.EasingFunction>
                                                        <SineEase EasingMode="EaseOut" />
                                                    </EasingThicknessKeyFrame.EasingFunction>
                                                </EasingThicknessKeyFrame>
                                            </ThicknessAnimationUsingKeyFrames>
                                            <DoubleAnimation Storyboard.TargetName="RightDrawerShadow" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.04" />
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="RightDrawerOpen" To="RightDrawerClosed">
                                        <Storyboard>
                                            <ThicknessAnimation Storyboard.TargetProperty="Margin" Storyboard.TargetName="PART_RightDrawer" Duration="0:0:0.4">
                                                <ThicknessAnimation.EasingFunction>
                                                    <SineEase EasingMode="EaseOut" />
                                                </ThicknessAnimation.EasingFunction>
                                            </ThicknessAnimation>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="RightDrawerShadow" Storyboard.TargetProperty="Opacity">
                                                <EasingDoubleKeyFrame Value="1" KeyTime="0:0:0.36" />
                                                <EasingDoubleKeyFrame Value="0" KeyTime="0:0:0.4">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <SineEase EasingMode="EaseOut" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="RightDrawerOpen">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="RightDrawerShadow" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0" />
                                        <ThicknessAnimation Storyboard.TargetProperty="Margin" Storyboard.TargetName="PART_RightDrawer" To="0 0 0 0" Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="RightDrawerClosed">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="RightDrawerShadow" Storyboard.TargetProperty="Opacity" From="0" To="0" Duration="0" />
                                        <ThicknessAnimation Storyboard.TargetProperty="Margin" Storyboard.TargetName="PART_RightDrawer" Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="TopDrawer">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="TopDrawerClosed" To="TopDrawerOpen">
                                        <Storyboard>
                                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="PART_TopDrawer">
                                                <EasingThicknessKeyFrame Value="0" KeyTime="0:0:0.4">
                                                    <EasingThicknessKeyFrame.EasingFunction>
                                                        <SineEase EasingMode="EaseOut" />
                                                    </EasingThicknessKeyFrame.EasingFunction>
                                                </EasingThicknessKeyFrame>
                                            </ThicknessAnimationUsingKeyFrames>
                                            <DoubleAnimation Storyboard.TargetName="TopDrawerShadow" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.04" />
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="TopDrawerOpen" To="TopDrawerClosed">
                                        <Storyboard>
                                            <ThicknessAnimation Storyboard.TargetProperty="Margin" Storyboard.TargetName="PART_TopDrawer" Duration="0:0:0.4">
                                                <ThicknessAnimation.EasingFunction>
                                                    <SineEase EasingMode="EaseOut" />
                                                </ThicknessAnimation.EasingFunction>
                                            </ThicknessAnimation>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="TopDrawerShadow" Storyboard.TargetProperty="Opacity">
                                                <EasingDoubleKeyFrame Value="1" KeyTime="0:0:0.36" />
                                                <EasingDoubleKeyFrame Value="0" KeyTime="0:0:0.4">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <SineEase EasingMode="EaseOut" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="TopDrawerOpen">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="TopDrawerShadow" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0" />
                                        <ThicknessAnimation Storyboard.TargetProperty="Margin" Storyboard.TargetName="PART_TopDrawer" To="0" Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="TopDrawerClosed">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="TopDrawerShadow" Storyboard.TargetProperty="Opacity" From="0" To="0" Duration="0" />
                                        <ThicknessAnimation Storyboard.TargetProperty="Margin" Storyboard.TargetName="PART_TopDrawer" Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="BottomDrawer">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="BottomDrawerClosed" To="BottomDrawerOpen">
                                        <Storyboard>
                                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="PART_BottomDrawer">
                                                <EasingThicknessKeyFrame Value="0" KeyTime="0:0:0.4">
                                                    <EasingThicknessKeyFrame.EasingFunction>
                                                        <SineEase EasingMode="EaseOut" />
                                                    </EasingThicknessKeyFrame.EasingFunction>
                                                </EasingThicknessKeyFrame>
                                            </ThicknessAnimationUsingKeyFrames>
                                            <DoubleAnimation Storyboard.TargetName="BottomDrawerShadow" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.04" />
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="BottomDrawerOpen" To="BottomDrawerClosed">
                                        <Storyboard>
                                            <ThicknessAnimation Storyboard.TargetProperty="Margin" Storyboard.TargetName="PART_BottomDrawer" Duration="0:0:0.4">
                                                <ThicknessAnimation.EasingFunction>
                                                    <SineEase EasingMode="EaseOut" />
                                                </ThicknessAnimation.EasingFunction>
                                            </ThicknessAnimation>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BottomDrawerShadow" Storyboard.TargetProperty="Opacity">
                                                <EasingDoubleKeyFrame Value="1" KeyTime="0:0:0.36" />
                                                <EasingDoubleKeyFrame Value="0" KeyTime="0:0:0.4">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <SineEase EasingMode="EaseOut" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="BottomDrawerOpen">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="BottomDrawerShadow" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0" />
                                        <ThicknessAnimation Storyboard.TargetProperty="Margin" Storyboard.TargetName="PART_BottomDrawer" To="0 0 0 0" Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="BottomDrawerClosed">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="BottomDrawerShadow" Storyboard.TargetProperty="Opacity" From="0" To="0" Duration="0" />
                                        <ThicknessAnimation Storyboard.TargetProperty="Margin" Storyboard.TargetName="PART_BottomDrawer" Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="RootGrid">
                            <AdornerDecorator>
                                <ContentPresenter 
                                        x:Name="ContentPresenter" Opacity="1"                    
                                        Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentStringFormat="{TemplateBinding ContentStringFormat}" />
                            </AdornerDecorator>
                            <Grid x:Name="PART_ContentCover" Background="{x:Null}" Opacity="0" IsHitTestVisible="False" Focusable="False" />
                            <Grid>
                                <Grid HorizontalAlignment="Left" VerticalAlignment="Stretch"
                                      x:Name="PART_LeftDrawer"
                                      Margin="{Binding RelativeSource={RelativeSource Self}, Path=ActualWidth, Converter={StaticResource DrawerOffsetConverter}, ConverterParameter={x:Static Dock.Left}}"
                                      Panel.ZIndex="{TemplateBinding LeftDrawerZIndex}">
                                    <AdornerDecorator CacheMode="{Binding RelativeSource={RelativeSource Self}, Path=(materialDesign:ShadowAssist.CacheMode)}">
                                        <Border Effect="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(materialDesign:ShadowAssist.ShadowDepth), Converter={x:Static materialDesign:ShadowConverter.Instance}}"
                                                Opacity="0"
                                                Background="{TemplateBinding LeftDrawerBackground}"
                                                x:Name="LeftDrawerShadow">
                                        </Border>
                                    </AdornerDecorator>
                                    <ContentPresenter Content="{TemplateBinding LeftDrawerContent}" ContentTemplate="{TemplateBinding LeftDrawerContentTemplate}" ContentStringFormat="{TemplateBinding LeftDrawerContentStringFormat}"
                                                      IsEnabled="{TemplateBinding IsLeftDrawerOpen}"
                                                      />
                                </Grid>
                                <Grid VerticalAlignment="Stretch" HorizontalAlignment="Right"
                                      x:Name="PART_RightDrawer"
                                      Margin="{Binding RelativeSource={RelativeSource Self}, Path=ActualWidth, Converter={StaticResource DrawerOffsetConverter}, ConverterParameter={x:Static Dock.Right}}"
                                      Panel.ZIndex="{TemplateBinding RightDrawerZIndex}">
                                    <AdornerDecorator CacheMode="{Binding RelativeSource={RelativeSource Self}, Path=(materialDesign:ShadowAssist.CacheMode)}">
                                        <Border Effect="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(materialDesign:ShadowAssist.ShadowDepth), Converter={x:Static materialDesign:ShadowConverter.Instance}}"
                                                Opacity="0"
                                                Background="{TemplateBinding RightDrawerBackground}"
                                                x:Name="RightDrawerShadow">
                                        </Border>
                                    </AdornerDecorator>
                                    <ContentPresenter Content="{TemplateBinding RightDrawerContent}" ContentTemplate="{TemplateBinding RightDrawerContentTemplate}" ContentStringFormat="{TemplateBinding RightDrawerContentStringFormat}"
                                                      IsEnabled="{TemplateBinding IsRightDrawerOpen}" />
                                </Grid>
                                <Grid HorizontalAlignment="Stretch" VerticalAlignment="Top"
                                      x:Name="PART_TopDrawer"
                                      Margin="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight, Converter={StaticResource DrawerOffsetConverter}, ConverterParameter={x:Static Dock.Top}}"
                                      Panel.ZIndex="{TemplateBinding TopDrawerZIndex}">
                                    <AdornerDecorator CacheMode="{Binding RelativeSource={RelativeSource Self}, Path=(materialDesign:ShadowAssist.CacheMode)}">
                                        <Border Effect="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(materialDesign:ShadowAssist.ShadowDepth), Converter={x:Static materialDesign:ShadowConverter.Instance}}"
                                                Opacity="0"
                                                Background="{TemplateBinding TopDrawerBackground}"
                                                x:Name="TopDrawerShadow">
                                        </Border>
                                    </AdornerDecorator>
                                    <ContentPresenter Content="{TemplateBinding TopDrawerContent}" ContentTemplate="{TemplateBinding TopDrawerContentTemplate}" ContentStringFormat="{TemplateBinding TopDrawerContentStringFormat}"
                                                      IsEnabled="{TemplateBinding IsTopDrawerOpen}" />
                                </Grid>
                                <Grid VerticalAlignment="Bottom" HorizontalAlignment="Stretch"
                                      x:Name="PART_BottomDrawer"
                                      Margin="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight, Converter={StaticResource DrawerOffsetConverter}, ConverterParameter={x:Static Dock.Bottom}}"
                                      Panel.ZIndex="{TemplateBinding BottomDrawerZIndex}">
                                    <AdornerDecorator CacheMode="{Binding RelativeSource={RelativeSource Self}, Path=(materialDesign:ShadowAssist.CacheMode)}">
                                        <Border Effect="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(materialDesign:ShadowAssist.ShadowDepth), Converter={x:Static materialDesign:ShadowConverter.Instance}}"
                                            Opacity="0"
                                            Background="{TemplateBinding BottomDrawerBackground}"
                                            x:Name="BottomDrawerShadow">
                                        </Border>
                                    </AdornerDecorator>
                                    <ContentPresenter Content="{TemplateBinding BottomDrawerContent}" ContentTemplate="{TemplateBinding BottomDrawerContentTemplate}" ContentStringFormat="{TemplateBinding BottomDrawerContentStringFormat}"
                                                      IsEnabled="{TemplateBinding IsBottomDrawerOpen}"/>
                                </Grid>
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
<!--x:Key="KeyboardDrawerHost"-->
<!--BasedOn="{StaticResource MaterialDesignRaisedButton}"-->
<!--<Setter Property="materialDesign:ShadowAssist.ShadowDepth" Value="Depth3" />-->